!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(window,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="./dist/",n(n.s=279)}({279:function(e,t,n){e.exports=n(280)},280:function(e,t,n){"use strict";n.r(t);var o={linedatas:[{id:"line1",type:"func",legend:"cos",color:"#55A8DE",visible:!0,func:Math.cos,dotNum:1e3},{id:"line2",type:"func",legend:"sin",color:"#A2CCB6",visible:!0,func:Math.sin,dotNum:1e3},{id:"line3",type:"func",legend:"x = y",color:"#C94346",visible:!0,func:function(e){return e},dotNum:1e3},{id:"line4",type:"func",legend:"sinh",color:"#F7CE6F",visible:!0,func:Math.sinh,dotNum:1e3},{id:"line5",type:"func",legend:"cosh",color:"#9168F6",visible:!0,func:Math.cosh,dotNum:1e3}],config:{font:"",legendVisible:!0,title:{location:"center",color:"#666666",text:"Plotta.js"},grid:{type:"",visible:!0,color:"#888888"},border:{type:"",visible:!0,color:"#DDDDDD",width:1},tics:{visible:!0,color:"#888888",value:{x:2,y:2}},axis:{x:{visible:!0,label:"X",color:"#666666",location:"center",range:{start:-10,end:10}},y:{visible:!0,label:"Y",color:"#666666",location:"center",range:{start:-10,end:10}}},table:{visible:!0}}};t.default=o,window.testData=o}})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,