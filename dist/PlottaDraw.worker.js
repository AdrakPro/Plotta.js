!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="../dist/",o(o.s=0)}([function(e,t,o){"use strict";o.r(t);var n={DrawTitle:function(e,t,o){var n=o.text,r=o.color,a=o.position;e.save(),e.font="20px ".concat(t),e.textAlign="center",e.textBaseline="middle",r&&(e.fillStyle=r),e.fillText(n,a.x,a.y),e.restore()},DrawLegends:function(e,t,o,n){e.save(),e.font="14px ".concat(t),e.textAlign="left",e.textBaseline="top";n.forEach(function(t){var n=t.color,r=t.legend,a=t.point;e.save(),e.fillText(r,o.x+a.x+15+5,o.y+a.y),n&&(e.fillStyle=n),e.fillRect(o.x+a.x,o.y+a.y,15,15),e.restore()}),e.restore()},DrawAxis:function(e,t,o){var n=o.xLabel,r=o.yLabel;e.save(),e.font="14px ".concat(t),e.textAlign="center",e.textBaseline="middle",n.visible&&(n.color&&(e.fillStyle=n.color),e.fillText(n.text,n.position.x,n.position.y)),r.visible&&(e.translate(r.position.x,r.position.y),e.rotate(-.5*Math.PI),r.color&&(e.fillStyle=r.color),e.fillText(r.text,0,0)),e.restore()},DrawBorder:function(e,t,o){var n=o.visible,r=(o.type,o.color),a=o.width;n&&(e.save(),r&&(e.strokeStyle=r),a&&(e.lineWidth=a),e.strokeRect(t.x,t.y,t.w,t.h),e.restore())},DrawGrid:function(e,t,o,n,r){var a=r.xTics,i=r.yTics,l=n.visible,s=(n.type,n.color);l&&(e.save(),e.strokeStyle=s,e.lineWidth=.3,a.forEach(function(t,n,r){0!==n&&n!==r.length-1&&(e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(t.x,t.y-o),e.stroke())}),i.forEach(function(o,n,r){0!==n&&n!==r.length-1&&(e.beginPath(),e.moveTo(o.x,o.y),e.lineTo(o.x+t,o.y),e.stroke())}),e.restore())},DrawTics:function(e,t,o,n){var r=n.visible,a=n.color,i=n.xTics,l=n.yTics;if(r){e.save(),a&&(e.strokeStyle=a,e.fillStyle=a),e.lineWidth=.3,e.textAlign="center",e.textBaseline="middle",i.forEach(function(t,n,r){var a,i=t.y+10;a=0===n?t.y-o:t.y,e.beginPath(),e.moveTo(t.x,i),e.lineTo(t.x,a),e.stroke(),e.fillText(t.value,t.x,t.y+10+15)}),l.forEach(function(o,n,r){var a,i=o.x-10;a=0===n?o.x+t:o.x,e.beginPath(),e.moveTo(i,o.y),e.lineTo(a,o.y),e.stroke(),e.fillText(o.value,o.x-10-15,o.y)}),e.restore()}},DrawLines:function(e,t,o){e.save(),e.lineWidth=3;var n=new Path2D;n.rect(t.x,t.y,t.w,t.h),e.clip(n,"evenodd"),o.forEach(function(o){var n=o.points,r=o.color;e.strokeStyle=r;var a=!0,i=n[0].y;n.forEach(function(o,n){o.y<t.y?i=t.y-5:o.y>t.y+t.h&&(i=t.y+t.h+5),!0===a?(e.beginPath(),e.moveTo(o.x,i||o.y),a=!1):e.lineTo(o.x,i||o.y),i=NaN}),e.stroke()}),e.restore()},DrawTable:function(e,t,o,n){var r=n.visible,a=n.selectedTic,i=n.colors,l=n.legends,s=n.legendWidth,c=n.datas;if(r&&!isNaN(a)&&i&&l&&s&&c){e.save(),e.font="14px ".concat(t),e.textAlign="left",e.textBaseline="top";var f=c[a];if(f&&f.canvasPos){var x=[];x[0]=f.canvasPos.y-23;for(var v=1;v<=f.length+1;v++)x[v]=x[v-1]+23;var y=[];y[0]=f.canvasPos.x+20,y[1]=y[0]+16+15+s,y[2]=y[1]+8+f.width;var u=(o.x+o.w)/2,d=y[2]-y[0];f.canvasPos.x>u?{x:(y=y.map(function(e){return e-d-40}))[2],y:x[0]}:{x:y[0],y:x[0]},e.save(),e.globalAlpha=.5,e.fillStyle="white",e.fillRect(y[0],x[0],y[2]-y[0],x[f.length+1]-x[0]),e.strokeStyle="#999999",e.strokeRect(y[0],x[0],y[2]-y[0],x[f.length+1]-x[0]);for(var h=1;h<=f.length;h++)e.beginPath(),e.moveTo(y[0],x[h]),e.lineTo(y[2],x[h]),e.stroke();e.beginPath(),e.moveTo(y[1],x[1]),e.lineTo(y[1],x[f.length+1]),e.stroke(),e.restore(),e.fillText("".concat(a),y[0]+4,x[0]+4);for(var g=0;g<f.length;g++)e.save(),e.fillText("".concat(l[g]),y[0]+15+12,x[g+1]+4),e.fillText("".concat(f[g].dataPos.toFixed(3)),y[1]+4,x[g+1]+4),e.fillStyle=i[g],e.fillRect(y[0]+4,x[g+1]+4,15,15),f[g].canvasPos>=o.y&&f[g].canvasPos<=o.y+o.h&&(e.beginPath(),e.arc(f.canvasPos.x,f[g].canvasPos,4,0,2*Math.PI),e.fill()),e.restore();e.restore()}}},Draw:function(e,t){var o=t.font,r=t.title,a=(t.legend,t.border),i=t.axis,l=t.grid,s=t.tics,c=t.lineDatas,f=t.legendDatas,x=t.tableData,v=t.canvasWidth,y=t.canvasHeight,u=t.graphRect,d=t.legendRect;e.font="12px ".concat(o),e.clearRect(0,0,v,y),n.DrawTitle(e,o,r),n.DrawBorder(e,u,a),n.DrawTics(e,u.w,u.h,s),n.DrawGrid(e,u.w,u.h,l,s),n.DrawAxis(e,o,i),n.DrawLines(e,u,c),n.DrawLegends(e,o,d,f),n.DrawTable(e,o,u,x)}},r=n;self.onmessage=(e=>{const{canvas:t,dpr:o,drawData:n}=e.data;t&&(self.canvas=t,self.ctx=t.getContext("2d")),o&&self.ctx.scale(o,o),n&&r.Draw(self.ctx,n)})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,